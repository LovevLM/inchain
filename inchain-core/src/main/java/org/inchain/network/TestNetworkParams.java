package org.inchain.network;

import org.inchain.crypto.Sha256Hash;
import org.inchain.message.DefaultMessageSerializer;
import org.inchain.message.MessageSerializer;
import org.inchain.store.BlockStore;
import org.inchain.utils.Hex;
import org.inchain.utils.Utils;

/**
 * 测试网络
 * @author ln
 *
 */
public class TestNetworkParams extends NetworkParams {
	
    public TestNetworkParams() {
    	this.seedManager = new RemoteSeedManager();
    	init();
	}
    

	public TestNetworkParams(SeedManager seedManager) {
    	this.seedManager = seedManager;
    	init();
	}
    
	private void init() {
		
		packetMagic = 66926688l;
		
		this.acceptableAddressCodes = new int[] {getSystemAccountVersion(), getCertAccountVersion()};
	}
	
	/**
	 * 测试网络的创世块
	 */
	@Override
	public BlockStore getGengsisBlock() {
		BlockStore gengsisBlock = new BlockStore(this, Hex.decode("00000000000000000000000000000000000000000000000000000000000000000000000021a5435196d9b578fc69d36f0c5afea26c4fdb243ed8dd60a33f982cc619ddc5f1911958000000001101010000000112117468697320612067656e67736973207478000000000100008a5d7845630100000000000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acea050ab1590100000000000000000000020100000001d0b91a0a03bb04d1c1ac0e20de45ccd617cdcf15c28a8ec1436466994b8fd54c000000006b483045022100e757727f7c3056bdea507336755e5815219f31f67e7c7e45a634b12cf18028f502203525b3f4829e83e0375d0145f05a980917503a18576658cfa0a20e5d0b7c69a901210276c52ff14acd4c4d3e08f9596e0127a15e98207b3d0024426364825cd724c86dffffffff02000004bfc91b8e00ffffffffffffffff1976a9144237cccf6ff9a7674a8fc47c60278fdd23e9f30988ac0000869eae29d50000000000000000001976a914bb7e4d6ffb3266a0b533b21847bef4dacce95f4688acf1050ab1590100000000000000000000634237cccf6ff9a7674a8fc47c60278fdd23e9f3093f420f0003010000004237cccf6ff9a7674a8fc47c60278fdd23e9f3090d060ab16a2102883a9625a871e79c070e316edafc97eac2f6c97b218d0e55726f25be2a963e9246304402205819f2f483565cc407482ace14a600000b4a416e02e58504bd5f5be8050bc6ec02200db6f6054b40422993f29295b743006e11f9460bd28e58b056059ee13a236895ac632c1179b1e05fb8652644f6c61a033d28431009123f420f0003010000002c1179b1e05fb8652644f6c61a033d28431009120f060ab16b2103a7db4a854e3f2ae3a30aa759bfd39045f6a80c967b3fd81036acebc54b557ece473045022100893785b040fef0a7a1f0c0475319694203064f7cd2d3382a273f6230eb0875db022059ebcdf845c8dfff2661c7f551718dd7a192fc5957e74395c60f99f63bfde0e1ac63b3fcd687a5c2b2617de0d504cfa7d12db93bb00c3f420f000301000000b3fcd687a5c2b2617de0d504cfa7d12db93bb00c11060ab16a21033e371b2f3d42dd525833bcce12cb0d404fb73898bdea3e6794bd8ec552c9ba9c46304402205144c67d959e8f50d645948338e3506ce9a4bb506ff76aa96e9ac6d36f5c0176022002043f9b54b207e6287af9f50a7c6ff69fd3dbfe0b014e1f8eff03e2feb8f90fac63c3bfdb8a67f35b6e4ea1ee3ae7b91eff58ec81a83f420f000301000000c3bfdb8a67f35b6e4ea1ee3ae7b91eff58ec81a813060ab16b2103bf7759e9b81f8ff1b99732b3ee36aea0abff68c818b8839c318ad350e9642cb0473045022100f6402d3c0684ee2d9de17a3e8fbe3b4dce9be35918878d7f765c9983e781d6ec02205465677fa909d0fb2a00630f5176144a0c9b91e392cf2ff2d9af57ed4b18184eac635f1a078b610d92a3110b2c1a7f880b0d2442e5303f420f0003010000005f1a078b610d92a3110b2c1a7f880b0d2442e53015060ab16b210200d482122f8537ad2fa1af1914e088d6b308824a8ef4dc8b68fa0e0a88c484e347304502210090bbf0063f341d329e499a55e16b48bfa8958635e1c8c26740915f7517d027b0022079b035ef3f7382c84b747ec030442eccfc9610fa2025be7e5ec5037c58c1c901ac63df639c6066a817a6be28b532839f8e1e85594cd43f420f000301000000df639c6066a817a6be28b532839f8e1e85594cd417060ab16b2103e8769d1901a4ef006054405c16716d6648fffe628385db5586c7fa18c3df5da8473045022100bf4ae34048650c09eca5a59df91fb62a296a86d196f90f33d5367628b673cf0f02205de18527611bdfeaff2260d0621b7fe46f9d1e86dc270f94fc2901de4ff09f74ac63e3453a80144f6ac24baf01f20455c6167b9854853f420f000301000000e3453a80144f6ac24baf01f20455c6167b98548518060ab16b2103368f8061e02694e37da199c07c3e2f2506cdd748efee493f0d1c52ae7494428f473045022100e1b100101d83db58f2e41918d36983848d3d26d3bd34ae6b09f5306cbb1ee444022028257bad82fc3182bf6986aa4b343f59edf985ec86398bd50a8dc3d655d8f6fdac0b010000000000000000000000209f25d38efcf3b9a1832e6480fffbe7ccb49ba41ee9878de5ba86e58db0e993bee7a791e68a80e69c89e99990e585ace58fb8022102d06b679c33838c27fd4315376618d97b000fdd467f19c21c8f7f86f4ebe8b0b321032d171ed5eca13309eb134a60eb889bff26a754141ba55c9602d94cb237c74fe602210300777b64f7b8282065524ef442b783441a09f2d45cb8f6fddf4984fc99e4a48021020172e17f39d5397f135b162b28fd54f001e7693c05136d87310839004b3b791ac9c1200000000000000000000000000000000000000000000000000000000000000000c314000000000000000000000000000000000000000087463044022046862e4536c87bf63c39dc62faea52fae94ea822047ff287eae2f42997c03eec02204e7b07d044b419c23dd18410fecceecc71accf30bb4470fe78cfe60a0eb0964d473045022100b8fdb880ae94a2d19c655fe71db609da0c3c74ea841176c348475168f5000a5a022070d22edefb14cca8813ca44f4b8cde53b7ac904662b0c61f6eb0615975bb17ccac"));
		
		Sha256Hash merkleHash = gengsisBlock.getBlock().buildMerkleHash();
		
		if(log.isDebugEnabled()) {
			log.debug("the gengsis block merkle hash is : {}", merkleHash);
		}
		Utils.checkState("21a5435196d9b578fc69d36f0c5afea26c4fdb243ed8dd60a33f982cc619ddc5".equals(Hex.encode(merkleHash.getBytes())), "the gengsis block merkle hash is error");
		
		if(log.isDebugEnabled()) {
			log.debug("the gengsis block hash key is : {}", gengsisBlock.getBlock().getHash());
		}
		Utils.checkState("e22ad1ad6bf5090113562e2f92f45c53163a93a72adf31f098f41a645ba8846b".equals(Hex.encode(gengsisBlock.getBlock().getHash().getBytes())), "the gengsis block hash is error");
		
		return gengsisBlock;
	}
	
	@Override
	public int getProtocolVersionNum(ProtocolVersion version) {
		return version.getVersion();
	}

	@Override
	public MessageSerializer getSerializer(boolean parseRetain) {
		return new DefaultMessageSerializer(this);
	}
	
	/**
	 * 获取该网络的认证管理账号的hash160
	 * @return byte[]
	 */
	@Override
	public byte[] getCertAccountManagerHash160() {
		return Hex.decode("209f25d38efcf3b9a1832e6480fffbe7ccb49ba4");
	}
	
	/**
	 * 测试网络，普通地址以t开头
	 */
	@Override
	public int getSystemAccountVersion() {
		return 128;
	}

	/**
	 * 测试网络，认证地址以c开头
	 */
	@Override
	public int getCertAccountVersion() {
		return 88;
	}
}
