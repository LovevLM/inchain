#!/bin/sh
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '.*/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

# Get standard environment variables
JAVA_OPTS="-server -Xms512m -Xmx1024m"

SOURCE="$0"
while [ -h "$SOURCE"  ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /*  ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SERVER_HOME="$( cd -P "$( dirname "$SOURCE"  )" && cd .. && pwd  )"

if [ -z "$JAVA_HOME" ]; then
  JAVA_HOME=$SERVER_HOME/jre
fi

# Get standard Java environment variables
if [ -r $SERVER_HOME/bin/setclasspath.sh ]; then
  BASEDIR="$SERVER_HOME"
  . $SERVER_HOME/bin/setclasspath.sh
else
  echo "Cannot find $SERVER_HOME/bin/setclasspath.sh"
  echo "This file is needed to run this program"
  exit 1
fi

# add conf to classpath
if [ -d "$SERVER_HOME/conf" ]; then
  CLASSPATH=${CLASSPATH}:$SERVER_HOME/conf
fi

# add jar to CLASSPATH
for f in $SERVER_HOME/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done


# add libs to CLASSPATH
for f in $SERVER_HOME/lib/*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

APP_MAINCLASS=org.inchain.kit.InchainKit

psid=0
 
checkpid() {
   javaps=`ps -ef | grep -v 'grep' | grep $APP_MAINCLASS | awk '{print $2}'`

   if [ -n "$javaps" ]; then
      psid=`echo $javaps |cut -d" " -f1`
   else
      psid=0
   fi
}

start() {
	checkpid
	if [ $psid -ne 0 ]; then
      echo "================================"
      echo "warn: inchain already started! (pid=$psid)"
      echo "================================"
   	else
   		echo -n "Starting inchain ..."
		exec "$_RUNJAVA" $JAVA_OPTS -cp "$CLASSPATH" -DserverHome=$SERVER_HOME $APP_MAINCLASS "start" >/dev/null 2>&1 &
		checkpid
		if [ $psid -ne 0 ]; then
		   echo "(pid=$psid) [OK]"
		else
		   echo "[Failed]"
		fi
	fi
}

stop() {

	checkpid
 
   if [ $psid -ne 0 ]; then
   		echo -n "Stopping inchain ...(pid=$psid) "
		exec "$_RUNJAVA" $JAVA_OPTS -cp "$CLASSPATH" $APP_MAINCLASS "stop" >/dev/null 2>&1 &
		if [ $? -eq 0 ]; then
         echo "[OK]"
      	else
         	echo "[Failed]"
      	fi
      	while [ $psid -ne 0 ];
      	do
	    	checkpid
        	sleep 1
      	done
	else 
		echo "inchain not started"
	fi
}

case "$1" in
   'start')
      start
      ;;
   'stop')
     stop
     ;;
   'restart')
     stop
     start
     ;;
   'status')
     status
     ;;
   'info')
     info
     ;;
  *)
     echo "Usage: inchain {start|stop|restart}"
     exit 1
esac